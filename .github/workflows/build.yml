name: Build Docker Image
on:
    push:
        branches:
            - main
        paths:
            - "Cargo.toml"

jobs:
    build:
        name: Build Docker Image
        runs-on: ubuntu-latest
        steps:
            - name: Check out Source Code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 2
            - name: Version Change
              id: version_check
              run: |
                  if git diff HEAD~1 -- Cargo.toml | grep -q '^+version = '; then
                    echo "version_changed=true" >> $GITHUB_OUTPUT
                    current_version=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
                    echo "current_version=$current_version" >> $GITHUB_OUTPUT
                  else
                    echo "version_changed=false" >> $GITHUB_OUTPUT
                  fi
            - name: Build Docker Image
              if: steps.version_check.outputs.version_changed == 'true'
              run: |
                  docker build --build-arg DISCORD_TOKEN='${{ secrets.DISCORD_TOKEN }}' --build-arg YOUTUBE_TOKEN='${{ secrets.YOUTUBE_TOKEN }}' -t mercury .
                  docker images
                  docker save --output mercury-${{ github.run_number }}.tar mercury:latest
            - name: Upload Docker Image to Compute Engine VM
              if: steps.version_check.outputs.version_changed == 'true'
              env:
                  GCE_VM: mercuryland
                  GCE_ZONE: us-central1-b
                  GCP_PROJECT: rational-energy-311213
              run: |
                  echo "${{ secrets.GCP_SA_KEY }}" > gcp-key.json

                  # 登入 Google Cloud
                  gcloud auth activate-service-account mercuryland@rational-energy-311213.iam.gserviceaccount.com --key-file=gcp-key.json
                  gcloud config set project $GCP_PROJECT

                  # 驗證連線
                  gcloud compute instances list --filter="name=$GCE_VM"

                  # 上傳 docker image 檔案
                  gcloud compute scp mercury.tar ${GCE_VM}:~/docker_images/mercury-${{ github.run_number }}.tar --zone=${GCE_ZONE} --quiet
            # - name: Upload Artifacts
            #  if: steps.version_check.outputs.version_changed == 'true'
            #   run: |
            #       curl -F file=@mercury.tar $( curl -H 'Content-Type: application/json' -d '{"access_code": "${{ secrets.QNAP_ACCESS }}", "composed_link_id": "${{ secrets.QNAP_LINK_ID }}", "overwrite": true, "path": "/"}' -X POST https://www.myqnapcloud.com/ajax/share_upload_link | jq -r '.result.upload_url')
